@use 'sass:math';
@use '@/design/element-plus-theme.scss' as theme;
@use 'element-plus/theme-chalk/src/mixins/mixins' as EPMixins;
@use 'element-plus/theme-chalk/src/mixins/function' as EPFunctions;

$directions: (
  'l': left,
  'r': right,
  't': top,
  'b': bottom,
);

$space: (
  '0': 0,
  '1': .25em,
  '2': .5rem,
  '3': 1rem,
  '4': 1.5rem,
  '5': 3rem,
  'auto': auto,
);

@each $size, $space in $space {
  .m-#{$size} {
    margin: $space;
  }

  @each $directionName, $direction in $directions {
    .m#{$directionName}-#{$size} {
      margin-#{$direction}: $space;
    }
  }

  .mx-#{$size} {
    margin-left: $space;
    margin-right: $space;
  }

  .my-#{$size} {
    margin-top: $space;
    margin-bottom: $space;
  }

  .p-#{$size} {
    padding: $space;
  }

  @each $directionName, $direction in $directions {
    .p#{$directionName}-#{$size} {
      padding-#{$direction}: $space;
    }
  }

  .px-#{$size} {
    padding-left: $space;
    padding-right: $space;
  }

  .py-#{$size} {
    padding-top: $space;
    padding-bottom: $space;
  }
}


html .b {
  border-width: EPFunctions.getCssVar('border-width');
  border-color: EPFunctions.getCssVar('border-color');

  $borderStyles: (
    '0': none,
    'solid': solid,
  );

  @each $borderStyleName, $borderStyle in $borderStyles {
    @each $directionName, $direction in $directions {
      &#{$directionName}-#{$borderStyleName} {
        @extend .b;
        border-#{$direction}-style: $borderStyle;
      }
    }

    &-#{$borderStyleName} {
      @extend .b;
      border-style: $borderStyle;
    }

    &x-#{$borderStyleName} {
      @extend .b;
      border-left-style: $borderStyle;
      border-right-style: $borderStyle;
    }

    &y-#{$borderStyleName} {
      @extend .b;
      border-top-style: $borderStyle;
      border-bottom-style: $borderStyle;
    }
  }
}

html .d {
  $displays: (
    'flex': flex,
    'block': block,
    'none': none,
  );

  @each $displayName, $displayStyle in $displays {
    &-#{$displayName} {
      display: $displayStyle;
    }
  }
}

.flex {
  $directions: (
    'column': column,
    'row': row,
  );

  &-center>* {
    @extend .mx-auto;
    @extend .my-auto;
  }

  &-center-x>* {
    @extend .mx-auto;
  }

  &-center-y>* {
    @extend .my-auto;
  }

  @each $direction, $directionStyle in $directions {
    &-#{$direction} {
      flex-direction: $directionStyle;
    }
  }
}

.align-items-start {
  align-items: flex-start;
}

.align-items-center {
  align-items: center;
}

.align-items-end {
  align-items: flex-end;
}

.align-items-baseline {
  align-items: baseline;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-between {
  justify-content: space-between;
}

.justify-content-evenly {
  justify-content: space-evenly;
}

.justify-content-end {
  justify-content: flex-end;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.float {
  float: none;

  @each $direction, $directionStyle in $directions {
    &-#{$direction} {
      float: $directionStyle;
    }
  }
}

@each $size, $space in $space {
  .gap-#{$size} {
    gap: $space !important;
  }
}

@each $size in (10,20,30,40,50,60,70,80,90,100) {
  .h-#{$size} {
    height: math.percentage(math.div($size, 100));
  }
  .mh-#{$size} {
    min-height: math.percentage(math.div($size, 100));
  }
  .w-#{$size} {
    width: math.percentage(math.div($size, 100));
  }
  .mw-#{$size} {
    max-width: math.percentage(math.div($size, 100));
  }
}

.h-auto {
  height: auto;
}
.w-auto {
  width: auto;
}

@each $name, $size in theme.$border-radius {
  .br-#{$name} {
    border-radius: EPFunctions.getCssVar('border-radius', $name);
  }
}

.of-hidden {
  overflow: hidden;
  text-overflow: ellipsis;
}

.of-scroll {
  overflow: scroll;
}

.of-auto {
  overflow: auto;
}

.text-icon {
  justify-content: start !important;
  width: 100% !important;
  font-style: unset;

  svg {
    margin-right:0.5em;
  }
}

.el-button.is-round {
    min-width:7.5em;
}

.el-space {
  margin-bottom: 0 !important;
}

.pos-relative {
  position: relative;
}

.pos-absolute {
  position: absolute;
}

.max-two-lines {
  max-height: 2.6em;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}
